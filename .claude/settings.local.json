{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(npx create-next-app@latest:*)",
      "Bash(npm install:*)",
      "Bash(npm audit:*)",
      "Bash(npm uninstall:*)",
      "Bash(npm run build:*)",
      "Bash(npm run dev:*)",
      "Bash(taskkill:*)",
      "Bash(PORT=3000 npm run dev)",
      "Bash(npx next dev:*)",
      "Bash(go mod:*)",
      "mcp__render__create_web_service",
      "mcp__render__list_workspaces",
      "mcp__supabase__apply_migration",
      "mcp__supabase__execute_sql",
      "mcp__supabase__get_project_url",
      "mcp__render__get_selected_workspace",
      "mcp__vercel__deploy_to_vercel",
      "mcp__render__list_services",
      "mcp__render__list_deploys",
      "mcp__render__get_deploy",
      "mcp__render__get_service",
      "mcp__render__update_environment_variables",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "mcp__render__update_web_service",
      "Bash(chmod:*)",
      "Bash(curl:*)",
      "mcp__vercel__get_access_to_vercel_url",
      "mcp__vercel__web_fetch_vercel_url",
      "mcp__vercel__list_teams",
      "mcp__vercel__list_projects",
      "mcp__vercel__get_project",
      "mcp__vercel__get_deployment",
      "mcp__vercel__get_deployment_build_logs",
      "Bash(cat:*)",
      "Bash(rm:*)",
      "Bash(npm run type-check:*)",
      "mcp__browsermcp__browser_navigate",
      "mcp__browsermcp__browser_click",
      "mcp__browsermcp__browser_get_console_logs",
      "mcp__browsermcp__browser_screenshot",
      "Bash(npx kill-port:*)",
      "mcp__browsermcp__browser_type",
      "mcp__browsermcp__browser_wait",
      "mcp__browsermcp__browser_snapshot",
      "Bash(psql:*)",
      "mcp__supabase__list_tables",
      "Bash(go:*)",
      "Bash(winget install:*)",
      "Bash(choco install:*)",
      "Bash(msiexec:*)",
      "Bash(nslookup:*)",
      "Bash(ping:*)",
      "Bash(git check-ignore:*)",
      "mcp__supabase__list_projects",
      "Bash(openssl rand:*)",
      "Bash(dir:*)",
      "Bash(findstr:*)",
      "mcp__browsermcp__browser_press_key",
      "Bash(netstat:*)",
      "Bash(for file in *.md)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(wc -l \"$file\")",
      "Bash(done)"
    ],
    "deny": [],
    "ask": []
  }
}